
@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

'title System Sequence Diagram (SSD) - US006

autonumber

actor "GSM" as GSM
participant ":AssignTeamUI" as UI
participant ":AssignTeamController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "teamRepository:\nTeamRepository" as TeamRepository
participant "entryRepository\n:EntryRepository" as EntryRepo
participant ":AgendaEntryMapper" as AgendaEntryMapper
participant ":NotificationService" as NotificationService
participant "agendaEntry\n:AgendaEntry" as AgendaEntry
participant ":ToDoEntryMapper" as ToDoEntryMapper
participant ":TeamMapper" as teamMapper
participant "teamDto:\nTeamDto" as teamDto

activate GSM

    GSM -> UI : asks to assign a Team to an entry in the Agenda
    activate UI

        UI -> CTRL** : create
                activate CTRL

                    CTRL -> RepositorySingleton : getInstance()
                    activate RepositorySingleton

                        RepositorySingleton --> CTRL : instance
                    deactivate RepositorySingleton

                    CTRL -> PLAT : getEntryRepository()
                    activate PLAT

                        PLAT --> CTRL : registerToDoEntryRepository
                    deactivate PLAT

                    CTRL -> PLAT : getTeamRepository()
                    activate PLAT

                    PLAT --> CTRL : teamRepository
                    deactivate PLAT

                     deactivate CTRL


        UI -> CTRL: getAgendaEntryList(GSM)
                activate CTRL

                    CTRL -> EntryRepo: getAgendaEntryList(GSM)
                    activate EntryRepo

                    EntryRepo --> CTRL: agendaEntries
                    deactivate EntryRepo

                    CTRL -> ToDoEntryMapper : toDtoList(toDoEntryList)
                                activate ToDoEntryMapper

                                loop

                                    ToDoEntryMapper -> ToDoEntryDto** : create
                                    activate ToDoEntryDto

                                    ToDoEntryDto --> ToDoEntryMapper : toDoEntryListDTO
                                    deactivate ToDoEntryDto
                                end

                                ToDoEntryMapper --> CTRL : toDoEntryDTO
                                deactivate ToDoEntryMapper

                                CTRL --> UI : toDoEntryDtoList
                            deactivate CTRL

                deactivate UI

        UI -> CTRL : getTeamList()
                activate UI
                activate CTRL

                CTRL -> TeamRepository : getTeamList()
                activate TeamRepository

                TeamRepository -> CTRL : availableTeam
                deactivate TeamRepository

                CTRL -> teamMapper: toDtoList(teamList)
                deactivate CTRL
                activate teamMapper

                    loop

                    teamMapper -> teamDto**: create
                    activate teamDto

                    teamDto --> teamMapper: teamDto
                    deactivate teamDto

                    end loop


                teamMapper --> CTRL: teamList
                deactivate teamMapper
                activate CTRL

                CTRL -> UI : teamList
                deactivate CTRL

        UI --> GSM : shows the entries in the agenda and asks to select one
        deactivate UI

    GSM -> UI : selects the entry
    activate UI

    UI --> GSM : shows teams available and asks to select one
    deactivate UI

    GSM -> UI: selects the team
    activate UI

    UI --> GSM : shows all data and requests confirmation
    deactivate UI

    GSM -> UI: confirms
    activate UI

        UI -> CTRL : updateEntryWithTeam(agendaEntryDto, teamDtoList)
                deactivate UI
                activate CTRL

                    CTRL -> teamMapper : toDomain(teamDtoList)
                                deactivate CTRL
                                activate teamMapper

                                    teamMapper -> Team** : create
                                    activate Team

                                    Team --> teamMapper : team
                                    deactivate Team

                                teamMapper --> CTRL : team
                                deactivate teamMapper
                                activate CTRL

                    CTRL -> AgendaEntryMapper : toDomain(agendaEntryDto)
                                deactivate CTRL
                                activate AgendaEntryMapper

                                    AgendaEntryMapper -> AgendaEntry** : create
                                    activate AgendaEntry

                                    AgendaEntry --> AgendaEntryMapper : agendaEntry
                                    deactivate AgendaEntry

                                AgendaEntryMapper --> CTRL : agendaEntry
                                deactivate AgendaEntryMapper

                        activate CTRL

                        CTRL -> EntryRepo : updateTeamAgendaEntry(agendaEntry, Team)
                        deactivate CTRL
                        activate EntryRepo



                    EntryRepo --> CTRL : success
                    deactivate EntryRepo
                    activate CTRL

        CTRL -> NotificationService : notifyTeam(collaboratorsList ,agendaEntry)
                    deactivate CTRL
                    activate NotificationService

                        NotificationService -> NotificationService : buildEmailBody(collaboratorsList,agendaEntry)
                        activate NotificationService

                        NotificationService --> NotificationService : email
                        deactivate NotificationService

                        NotificationService -> NotificationService : writeNotification(collaboratorsList, subject, email, agendaEntry)
                        activate NotificationService

                        NotificationService --> NotificationService : success
                        deactivate NotificationService

                        NotificationService --> CTRL : success
                        deactivate NotificationService
                activate CTRL

        CTRL --> UI : success
        deactivate CTRL
        activate UI

    UI --> GSM : displays success message (Team assigned successfully)
    deactivate UI

deactivate GSM

@enduml
