@startuml
skinparam shadowing false
skinparam line type polyline

'left to right direction
package UI{
    class ListGreenSpacesUI {
        - controller : ListGreenSpacesController
        + ListGreenSpacesUI()
        + getOrganizedList(loggedUser) : List<GreenSpace>
    }
}
package CONTROLLER {
    class ListGreenSpacesController {
        - repositories: Repositories
        - greenSpaceRepository : GreenSpaceRepository

        + ListGreenSpacesController()
        +getList(loggedUser) : List<GreenSpace>
    }
}
package DOMAIN{
package REPOSITORY{
    class Repositories {
        - instance : Repositories
        - greenSpaceRepository : GreenSpaceRepository
        - Repositories()
        + getInstance() : Repositories
        + getGreenSpaceRepository() : GreenSpaceRepository
    }

    class GreenSpaceRepository {
        - greenSpaceList : List<GreenSpace>
        + GreenSpaceRepository()
        + getOrganizedList(loggedUser) : List<GreenSpaceDto>
        - verifyEmptyList(listMatched : List<GreenSpace>) : Boolean
        - matchWithLoggedUser(loggedUser) : List<GreenSpace>
        - organizeList(listMatched : List<GreenSpace>) : void
    }
    }
package MODEL{
    class GreenSpace {
        - name : String
        - size : Double
        - manager : Collaborator
        + getManager() : Collaborator
        + getSize() : Double
    }
    }
    package DTO{
        class GreenSpaceDto{
            - name : String
            - type : GreenSpaceType
            - area : Double
            - manager : UserSession
            - address : String
            - city : String
            - zipCode : String
            + getName() : String
            + getType() : GreenSpaceType
            + getArea() : Double
            + getManager() : UserSession
            + getAddress() : String
            + getCity() : String
            + getZipCode() : String
        }

        class GreenSpaceMapper{
            +toDto(greenSpace : GreenSpace) : GreenSpaceDto
            +toDomain(greenSpaceDto : GreenSpaceDto) : GreenSpace
        }
    }
    }
    package EXTERNAL{
    interface SortAlgorithms{
    +sort(g : List<GreenSpace>) : List<GreenSpace>
    }
    class SortByAscending{
    +sort(g : List<GreenSpace>) : List<GreenSpace>
    }
    class SortByDescending{
        +sort(g : List<GreenSpace>) : List<GreenSpace>
    }
    class SortByType{
        +sort(g : List<GreenSpace>) : List<GreenSpace>
    }
}

ListGreenSpacesUI ..> ListGreenSpacesController
ListGreenSpacesController ..> Repositories: repositories
Repositories --> Repositories: instance
ListGreenSpacesController ..> GreenSpaceRepository: greenSpaceRepository
Repositories --> "1"GreenSpaceRepository: greenSpaceRepository
GreenSpaceRepository -->"*" GreenSpace
GreenSpaceRepository ..> GreenSpaceMapper : toDto
GreenSpaceMapper ..> GreenSpaceDto
GreenSpaceRepository ..> SortAlgorithms : uses
SortAlgorithms --> SortByAscending : is implemented
SortAlgorithms --> SortByDescending : is implemented
SortAlgorithms --> SortByType : is implemented


@enduml
