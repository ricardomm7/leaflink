@startuml
skinparam shadowing false
skinparam line type polyline

package UI {
class ListTaskSpaceUI {
    - controller : ListTaskController
}
}

package CONTROLLER {
class ListTaskController {
    - repositories: Repositories
    - collaborator : CollaboratorRepository
    - greenSpaceRepository : GreenSpaceRepository
    - entryRepository : EntryRepository
    + getCollaboratorTroughEmail(String email) : Collaborator
    + ListTaskController()
    + getTeamTroughCLB(Collaborator clb) : Team
    + getDatesList(LocalDate beginningDate, LocalDate endDate, Collaborator collaborator) : List<AgendaEntryDto>
    + getAgendaEntries(UserSession session) : List<AgendaEntryDto>
}
}
package DOMAIN {
package REPOSITORY {
class Repositories {
    - instance : Repositories
    - collaboratorRepository : CollaboratorRepository
    - teamRepository : TeamRepository
    - taskRepository : TaskRepository
    + getInstance() : Repositories
    + getCollaboratorRepository() : CollaboratorRepository
    + getTeamRepository() : TeamRepository
    + getTaskRepository() : TaskRepository
    + getAgenda() : AgendaRepository
}

class CollaboratorRepository {
    + getCollaboratorThoughEmail(email: String) : Collaborator
}

class TeamRepository {
    + getTeamsThoughCollaborator(collaborator: Collaborator) : List<Team>
}

class AgendaRepository {
    + createEntry(greenSpace: GreenSpaceDTO, description: String, urgency: UrgencyStatus, expectedDuration: int) : Entry
}
}



package MODEL{
class AgendaEntry {
    - title : String
    - description : String
    - duration : int
    - urgency : UrgencyStatus
    - greenSpace : GreenSpaceDTO
    - startingDate : LocalDate
    - progressStatus : ProgressStatus

    +AgendaEntry(String title, String description, int duration, UrgencyStatus urgencyStatus, GreenSpace greenSpace,
                            LocalDate startingDate, ProgressStatus progressStatus)
    + setAvailable(agendaEntry , AgendaEntry) : void
}
}
}
package DTO {
class AgendaEntryDto {
    - title : String
    - description : String
    - duration : int
    - urgency : UrgencyStatus
    - greenSpace : GreenSpaceDTO
    - startingDate : LocalDate
    - progressStatus : ProgressStatus
    - assignedTeam : TeamDto
    - assignedVehicle : List<VehicleDto>
    +AgendaEntryDto(String title, String description, int duration, UrgencyStatus urgencyStatus, GreenSpace greenSpace,
                            LocalDate startingDate, ProgressStatus progressStatus)
}

class AgendaEntryMapper {
    + toDomain(agendaEntryDto : AgendaEntryDto) : AgendaEntry
    + toDTOList(listEntries: List<AgendaEntries>) : List<AgendaEntryDto>
    + toDto(agendaEntry : AgendaEntry) : AgendaEntryDto
}
}

ListTaskSpaceUI ..> ListTaskController

ListTaskController ..> AgendaEntryMapper
ListTaskController ..> Repositories: repositories
Repositories --> Repositories: instance
ListTaskController ..> CollaboratorRepository
ListTaskController ..> TeamRepository
ListTaskController ..> AgendaRepository
Repositories --> "1" CollaboratorRepository
Repositories --> "1" TeamRepository
Repositories --> "1" AgendaRepository

AgendaRepository --> AgendaEntry

AgendaEntryMapper ..> AgendaEntryDto

@enduml

