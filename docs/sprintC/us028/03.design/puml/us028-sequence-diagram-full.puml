@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Collaborator" as CLB
participant ":ListTaskSpaceUI" as UI
participant ":ListTaskController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as REP
participant "collaboratorRepository\n:CollaboratorRepository" as collaboratorRepository
participant "teamRepository\n:TeamRepository" as teamRepository
participant "entryRepository\n:EntryRepository" as entryRepository
participant "datesList\n:List<AgendaEntry>" as LISTDATES
participant "statusList\n:List<String>" as LISTSTATUS
participant "agenda\n:Agenda" as AGENDA
participant ":EntryMapper" as Mapper
participant "listEntriesDto\n:List<EntryDto>" as LISTENTRIESDTO
participant "entryDto\n:EntryDto" as DTO
participant "agendaEntries\n:List<AgendaEntries>" as AGENDAENTRIES

activate CLB

CLB -> UI : asks to consult the entry assigned to himself
    activate UI

    UI -> CTRL** : create
    activate CTRL

     CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton


            RepositorySingleton --> CTRL : repositories
            deactivate RepositorySingleton


        CTRL -> REP : getCollaboratorRepository
            activate REP

            REP --> CTRL : collaboratorRepository
            deactivate REP
             deactivate CTRL
UI -> CTRL : getCollaboratorThoughEmail(email)
    activate CTRL

        CTRL -> collaboratorRepository : getCollaboratorThoughEmail(email)
            activate collaboratorRepository

            collaboratorRepository -> collaboratorRepository : getCollaboratorThoughEmail(email)
            activate collaboratorRepository

            collaboratorRepository --> collaboratorRepository : email
            deactivate collaboratorRepository

            collaboratorRepository --> CTRL : collaborator

                deactivate collaboratorRepository

            deactivate collaboratorRepository
        CTRL --> UI : collaborator
        deactivate CTRL

    UI --> CLB : asks to select the beginning and end date of the search
    deactivate UI

CLB -> UI : selects the beginning and end date
    activate UI

    UI -> CTRL : getStatusList(beginningDate,endDate)
        activate CTRL



        CTRL -> REP : getEntryRepository()
            activate REP

            REP --> CTRL : entryRepository
            deactivate REP

        CTRL -> entryRepository : getStatusList(beginningDate,endDate)
            activate entryRepository

            entryRepository --> LISTSTATUS** : create(beginningDate,endDate)
                loop for each status in the system
                    entryRepository -> LISTSTATUS : add(status)
                        activate LISTSTATUS
                end
            LISTSTATUS --> entryRepository : statusList
            deactivate LISTSTATUS

        entryRepository --> CTRL : statusList
        deactivate entryRepository

        CTRL --> UI : statusList
        deactivate CTRL

    UI --> CLB : asks to select the type of status he wants to consult
    deactivate UI

CLB -> UI : Selects the type he wants to consult
    activate UI

    UI --> CLB : asks for confirmation
    deactivate UI

CLB -> UI : confirms that he wants to create the list
    activate UI

    UI -> CTRL : getTaskList(collaborator,dateI,dateF,typeStatus)
        activate CTRL


        CTRL -> REP : getTeamRepository()
            activate REP

            REP --> CTRL : teamRepository
            deactivate REP

        CTRL -> teamRepository : getTeamsThoughCollaborator(collaborator)
            activate teamRepository

            teamRepository -> teamRepository : getTeamsThoughCollaborator(collaborator)
            activate teamRepository
            teamRepository --> teamRepository : collaborator
            deactivate teamRepository

            teamRepository --> CTRL : teamList
            deactivate teamRepository



        CTRL -> REP : getEntryRepository()
            activate REP

            REP --> CTRL : entryRepository
            deactivate REP

        CTRL -> entryRepository : getDatesList(teamList,dateI,dateF,typeStatus)
            activate entryRepository

            entryRepository -> LISTDATES** : create()
                loop for each entry in the system
                    opt ((typeStatus() == entry.getStatus() && (team == entry.getTeam)) && (dateI <= entry.getDateI()) && (dateF >= entry.getDateF()))
                        entryRepository -> LISTDATES : addEntryOfCollaborator(entry)
                            activate LISTDATES
                    end

                end
            LISTDATES --> entryRepository : datesList
            deactivate LISTDATES

            entryRepository --> CTRL : datesList
        deactivate entryRepository


        CTRL -> Mapper : toDTOList(listEntries)
            activate Mapper

            Mapper --> LISTENTRIESDTO** : create()
                loop for each entry in entryList
                    Mapper -> AGENDAENTRIES : get(i)
                        activate AGENDAENTRIES

                        AGENDAENTRIES --> Mapper : entry
                        deactivate AGENDAENTRIES
                    Mapper -> DTO : toDTOEntry(entry)
                        activate DTO

                        DTO --> Mapper : entryDto
                        deactivate DTO
                    Mapper -> LISTENTRIESDTO : add(entryDto)
                        activate LISTENTRIESDTO
                end


            LISTENTRIESDTO --> Mapper : listEntriesDto
             deactivate LISTENTRIESDTO

             Mapper --> CTRL : listEntriesDto
            deactivate Mapper

        CTRL --> UI : listEntriesDto
        deactivate CTRL

    UI --> CLB : displays greens spaces sorted by date
    deactivate UI

deactivate CLB
@enduml
