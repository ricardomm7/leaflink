@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "CLB" as CLB
participant ":RecordEntryUI" as UI
participant ":RecordEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "entryRepository:\n:EntryRepository" as EntryRepo
participant "teamRepository:\n:TeamRepository" as TeamRepo
participant "ToDoEntryMapper" as EntryMapper
participant "toDoEntryDto\n:ToDoEntryDto" as EntryDto
participant "toDoEntry\n:ToDoEntry" as ToDoEntry


activate CLB

    CLB -> UI : asks to record a complete toDoEntry
    activate UI

        UI -> CTRL** : create
        deactivate UI
        activate CTRL

            CTRL -> RepositorySingleton: getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getTeamRepository()
            activate PLAT

                PLAT --> CTRL: teamRepository
            deactivate PLAT

            CTRL -> PLAT : getEntryRepository()
            activate PLAT

                PLAT --> CTRL: entryRepository
            deactivate PLAT


        deactivate CTRL

        UI -> CTRL: getToDoEntryOfCollaboratorList()
        activate UI
        activate CTRL

            CTRL -> TeamRepo: getToDoEntriesAssignedToCollaborator(CLB)
            deactivate CTRL
            activate TeamRepo

            loop
                TeamRepo --> EntryMapper: toDto(toDoEntry)
                activate EntryMapper

                    EntryMapper -> EntryDto** : create
                    activate EntryDto

                    EntryDto --> EntryMapper : toDoEntryDto
                    deactivate EntryDto

                EntryMapper --> TeamRepo: toDoEntryDto
                deactivate EntryMapper
            end
                TeamRepo --> CTRL: toDoEntryDtoList
            deactivate TeamRepo
        activate CTRL

        CTRL --> UI : toDoEntryDtoList
        deactivate CTRL

        UI -> CLB : shows the list of the entry assign to the collaborator and requests to select the one to record
    deactivate UI

    CLB -> UI : select an assigned toDoEntry
    activate UI

        UI --> CLB : show entry and requests confirmation
    deactivate UI

    CLB -> UI : confirms data
    activate UI

        UI -> CTRL : recordEntryCompletion(selectedToDoEntryDto)
        deactivate UI
        activate CTRL

            CTRL -> EntryMapper : toDomain(selectedToDoEntryDto)
            activate EntryMapper

                EntryMapper -> ToDoEntry** : create
                activate ToDoEntry

                ToDoEntry --> EntryMapper : toDoEntry
                deactivate ToDoEntry

                EntryMapper --> CTRL : toDoEntry
            deactivate EntryMapper

            CTRL -> EntryRepo : recordToDoEntryCompletion(toDoEntry, COMPLETED)
            deactivate CTRL
            activate EntryRepo

                EntryRepo -> ToDoEntry : setStatus(COMPLETED)
                deactivate EntryRepo
                activate ToDoEntry

                ToDoEntry -> EntryRepo : success
                deactivate ToDoEntry
                activate EntryRepo

            EntryRepo --> CTRL : success
            deactivate EntryRepo
            activate CTRL

            CTRL --> UI : success
        deactivate CTRL
        activate UI

        UI --> CLB : displays a success message (toDoEntry recorded as completed)
    deactivate UI

@enduml
