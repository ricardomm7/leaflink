@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "CLB" as CLB
participant ":RecordEntryUI" as UI
participant ":RecordEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "entryRepository:\n:EntryRepository" as EntryRepo
participant "teamRepository:\n:TeamRepository" as TeamRepo
participant "EntryMapper" as EntryMapper
participant "entryDto\n:EntryDto" as EntryDto
participant "entry\n:Entry" as Entry


activate CLB

    CLB -> UI : asks to record a complete entry
    activate UI

        UI -> CTRL** : create
        deactivate UI
        activate CTRL

            CTRL -> RepositorySingleton: getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getTeamRepository()
            activate PLAT

                PLAT --> CTRL: teamRepository
            deactivate PLAT

            CTRL -> PLAT : getEntryRepository()
            activate PLAT

                PLAT --> CTRL: entryRepository
            deactivate PLAT


        deactivate CTRL

        UI -> CTRL: getEntryOfCollaboratorList()
        activate UI
        activate CTRL

            CTRL -> TeamRepo: getEntriesAssignedToCollaborator(CLB)
            deactivate CTRL
            activate TeamRepo

            loop
                TeamRepo --> EntryMapper: toDto(entry)
                activate EntryMapper

                    EntryMapper -> EntryDto** : create
                    activate EntryDto

                    EntryDto --> EntryMapper : entryDto
                    deactivate EntryDto

                EntryMapper --> TeamRepo: entryDto
                deactivate EntryMapper
            end
                TeamRepo --> CTRL: entryDtoList
            deactivate TeamRepo
        activate CTRL

        CTRL --> UI : entryDTOList
        deactivate CTRL

        UI -> CLB : shows the list of the entry assign to the collaborator and requests to select the one to record
    deactivate UI

    CLB -> UI : select an assigned entry
    activate UI

        UI --> CLB : show entry and requests confirmation
    deactivate UI

    CLB -> UI : confirms data
    activate UI

        UI -> CTRL : recordEntryCompletion(selectedEntryDTO)
        deactivate UI
        activate CTRL

            CTRL -> EntryMapper : toEntry(selectedEntryDTO)
            activate EntryMapper

                EntryMapper -> Entry** : create
                activate Entry

                Entry --> EntryMapper : entry
                deactivate Entry

                EntryMapper --> CTRL : selectedEntry
            deactivate EntryMapper

            CTRL -> EntryRepo : recordEntryCompletion(selectedEntry, COMPLETED)
            deactivate CTRL
            activate EntryRepo

                EntryRepo -> Entry : setStatus(COMPLETED)
                deactivate EntryRepo
                activate Entry

                Entry -> EntryRepo : success
                deactivate Entry
                activate EntryRepo

            EntryRepo --> CTRL : success
            deactivate EntryRepo
            activate CTRL

            CTRL --> UI : success
        deactivate CTRL
        activate UI

        UI --> CLB : displays a success message (Entry recorded as completed)
    deactivate UI

@enduml
