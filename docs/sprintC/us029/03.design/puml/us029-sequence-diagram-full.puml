@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false


autonumber

actor "CLB" as CLB
participant ":RecordEntryUI" as UI
participant ":RecordEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "TeamRepository:\nTeamRepository" as TeamRepository
participant ":Agenda" as Agenda
participant ":toDoList" as ToDoList

participant "entry\n:Entry" as Entry


activate CLB

    CLB -> UI : asks to record a complete entry
    activate UI

        UI -> CTRL** : create
        deactivate UI
                activate CTRL

            CTRL -> RepositorySingleton: getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getTeamRepository()
            activate PLAT

                PLAT --> CTRL: TeamRepository
            deactivate PLAT

            CTRL -> TeamRepository : getTasksOfCollaborator()
            activate TeamRepository

                TeamRepository --> CTRL : ToDoList
            deactivate TeamRepository

            CTRL -> Agenda : verifyExistingTasks(taskList)
            activate Agenda

                Agenda --> CTRL : ToDoList
            deactivate Agenda

            CTRL -> ToDoList : verifyExistingTasks(taskList)
            activate ToDoList

                ToDoList --> CTRL : ToDoList
            deactivate ToDoList

            CTRL --> UI : ToDoList
        deactivate CTRL
        activate UI

        UI -> CLB : shows the list of the entry assign to the collaborator and requests to select the one to record
    deactivate UI

    CLB -> UI : select an assigned entry
    activate UI

        UI --> CLB : show entry and requests confirmation
    deactivate UI

    CLB -> UI : confirms data
    activate UI

        UI -> CTRL : submit data
        deactivate UI
        activate CTRL

            CTRL -> TeamRepository : recordEntryCompletion(selectedEntry)
            deactivate CTRL
            activate TeamRepository

                TeamRepository -> Entry : recordEntryCompletion(selectedEntry)
                deactivate TeamRepository
                activate Entry

                    Entry -> Entry : setStatus(complete)

                Entry --> TeamRepository : success
                deactivate Entry
                activate TeamRepository

            TeamRepository --> CTRL : success
            deactivate TeamRepository
            activate CTRL

            CTRL --> UI : success
        deactivate CTRL
        activate UI

        UI --> CLB : displays success message (Entry record as completed)
    deactivate UI

@enduml
