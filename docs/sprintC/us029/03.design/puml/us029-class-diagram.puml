@startuml
skinparam shadowing false
skinparam line type polyline

package UI {
    class RecordEntryUI {
    }
}

package CONTROLLER {
    class RecordEntryController {
        - repositories: Repositories
        - entryRepository: EntryRepository
        - teamRepository: TeamRepository
        + RecordEntryController()
        + getAgendaEntryOfCollaboratorList(collaborator: UserSession): List<AgendaEntryDto>
        + recordEntryCompletion(entryDto: AgendaEntryDto): boolean
    }
}

package DOMAIN {
    package REPOSITORY {
        class Repositories {
            - instance: Repositories
            - entryRepository: EntryRepository
            - teamRepository: TeamRepository
            + Repositories()
            + getInstance(): Repositories
            + getEntryRepository(): EntryRepository
            + getTeamRepository(): TeamRepository
        }

        class EntryRepository {
            - agendaEntryList: List<AgendaEntry>
            + EntryRepository()
            + getAgendaEntriesAssignedToCollaborator(collaborator: UserSession): List<AgendaEntry>
            + recordAgendaEntryCompletion(agendaEntry: AgendaEntry, status: ProgressStatus): boolean
        }

        class TeamRepository {
            - teamList: List<Team>
            + TeamRepository()
            + setTeamAvailable(team: Team, flag: boolean): void


        }
        class VehicleRepository {
            - vehicleList: List<Vehicle>
            + VehicleRepository()
            + setvehicleAvailable(vehicleList: List<Vehicle>, flag: boolean): void
        }
    }

    package MODEL {
        class AgendaEntry {
            - startingDate: LocalDate
            - progressStatus: ProgressStatus
            - assignedTeam: Team
            - assignedVehicle: List<Vehicle>
            + getStartingDate(): LocalDate
            + getProgressStatus(): ProgressStatus
            - setProgressStatus(newStatus: ProgressStatus): void
        }

        class ToDoEntry{
            - title: String
            - description: String
            - duration: int
            - greenSpace: GreenSpace
        }

        class Team {
            - skills : List<Skill>
            - minTeamSize : int
            - maxTeamSize : int
            - collaborators : List<Collaborator>
            - isAvailable : boolean
            + setAvailable(flag: boolean): void
        }

        class Vehicle {
            - VIN : String
            - brand : String
            - model : String
            - type : VehicleType
            - registrationDate: LocalDate
            - vehiclePlate : String
            - tareWeight : double
            - grossWeight : double
            - currentKm : int
            - acquisitionDate : LocalDate
            - maintenanceFrequency : int
            - isAvailable : boolean
            + setAvailable(flag: boolean): void
        }
    }
}
    package DTO {
        class AgendaEntryMapper {
            + toDto(agendaEntry: AgendaEntry): AgendaEntryDto
            + toDomain(agendaEntryDto: AgendaEntryDto): AgendaEntry
            + toDtoList(agendaEntries: List<AgendaEntry>): List<AgendaEntryDto>
        }

        class AgendaEntryDto {
            - title: String
            - description: String
            - duration: int
            - urgencyStatus: UrgencyStatus
            - greenSpace: GreenSpaceDto
            - startingDate: LocalDate
            - progressStatus: ProgressStatus
            + AgendaEntryDto(title: String, description: String, duration: int, urgencyStatus: UrgencyStatus, greenSpace: GreenSpaceDto, startingDate: LocalDate, progressStatus: ProgressStatus)
            + getTitle(): String
            + getDescription(): String
            + getDuration(): int
            + getUrgencyStatus(): UrgencyStatus
            + getGreenSpace(): GreenSpaceDto
            + getStartingDate(): LocalDate
            + getProgressStatus(): ProgressStatus
        }
    }


RecordEntryUI ..> RecordEntryController

RecordEntryController ..> Repositories
Repositories --> Repositories: instance
RecordEntryController ..> EntryRepository
RecordEntryController ..> TeamRepository
RecordEntryController ..> VehicleRepository
Repositories --> EntryRepository
Repositories --> TeamRepository
Repositories --> VehicleRepository
EntryRepository --> "*" AgendaEntry: agendaEntry
TeamRepository --> "*" Team: team
VehicleRepository --> "*" Vehicle: vehicle
AgendaEntryMapper ..> AgendaEntryDto
AgendaEntryMapper ..> AgendaEntry

AgendaEntry -> ToDoEntry

@enduml
