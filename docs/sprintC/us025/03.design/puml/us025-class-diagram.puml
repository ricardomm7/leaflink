@startuml
skinparam shadowing false
skinparam line type polyline
'left to right direction
package UI {
    class PostponeAgendaEntryUI {
    }
}

package CONTROLLER {
    class CancelAgendaEntryController {
        - repositories: Repositories
        - entryRepository: EntryRepository
        + CancelAgendaEntryController()
        + getAgendaEntryList(gsm: UserSession): List<AgendaEntryDto>
        + cancelAgendaEntry(agendaEntryDto: AgendaEntryDto): boolean
        - notifyTeam(agendaEntryDto: AgendaEntryDto): boolean
    }
}

package DOMAIN {
    package REPOSITORY {
        class Repositories {
            - instance: Repositories
            - entryRepository: EntryRepository
            + Repositories()
            + getInstance(): Repositories
            + getEntryRepository(): EntryRepository
        }

        class EntryRepository {
            - agendaEntryList: List<AgendaEntry>
            + EntryRepository()
            + getAgendaEntryListByGSM(gsm: UserSession): List<AgendaEntryDto>
            + updateAgendaEntry(agendaEntryDto: AgendaEntryDto, CANCELLED: ProgressStatus): boolean
            - updateEntryStatus(agendaEntry: AgendaEntry, CANCELLED: ProgressStatus): void

        }
    }


    package MODEL {
        class AgendaEntry {
            - title: String
            - description: String
            - duration: int
            - urgencyStatus: UrgencyStatus
            - greenSpace: GreenSpace
            - startingDate: LocalDate
            - progressStatus: ProgressStatus
            + AgendaEntry(title: String, description: String, duration: int, urgencyStatus: UrgencyStatus, greenSpace: GreenSpace, startingDate: LocalDate, progressStatus: ProgressStatus)
            + setProgressStatus(status: ProgressStatus): void
            + setStartingDate(date: LocalDate): void
        }

        class NotificationService {
            - buildEmailBodyCancel(collaboratorsList: List<Collaborator> , agendaEntry: AgendaEntry): String
            + notifyTeamCancel(collaboratorsList: List<Collaborator>, agendaEntry: AgendaEntry): boolean
        }
    }


}
 package EXTERNAL{
        class ApplicationSession{
            +getInstance : ApplicationSession
            +getSortAlgorithmClassName : String
            +getCurrentSession : UserSession
        }
 }

package DTO {
        class AgendaEntryMapper {
             + toDto(agendaEntry: AgendaEntry): AgendaEntryDto
             + toDomain(agendaEntryDto: AgendaEntryDto): AgendaEntry
             + toDtoList(agendaEntries: List<AgendaEntry>): List<AgendaEntryDto>
             }

        class AgendaEntryDto {
            - title: String
            - description: String
            - duration: int
            - urgencyStatus: UrgencyStatus
            - greenSpace: GreenSpaceDto
            - startingDate: LocalDate
            - progressStatus: ProgressStatus
            - assignedTeam: List<VehicleDto>
            - assignedTeam: TeamDto
            + AgendaEntryDto(title: String, description: String, duration: int, urgencyStatus: UrgencyStatus, greenSpace: GreenSpaceDto, startingDate: LocalDate, progressStatus: ProgressStatus, assignedTeam: TeamDto, assignedVehicle: List<VehicleDto>)
            + getTitle(): String
            + getDescription(): String
            + getDuration(): int
            + getUrgencyStatus(): UrgencyStatus
            + getGreenSpace(): GreenSpaceDto
            + getStartingDate(): LocalDate
            + getProgressStatus(): ProgressStatus
            + getAssignedTeam(): TeamDto
            + getAssignedVehicle(): List<VehicleDto>
            + setAssignedTeam(team: TeamDto): void
            + setAssignedVehicle(vehicleList: List<VehicleDto>): void
        }
    }

PostponeAgendaEntryUI ..> CancelAgendaEntryController
CancelAgendaEntryController ..> Repositories
Repositories --> Repositories: instance
CancelAgendaEntryController ..> EntryRepository
Repositories --> EntryRepository
EntryRepository --> "*" AgendaEntry
AgendaEntryMapper ..> AgendaEntryDto
AgendaEntryMapper ..> AgendaEntry
CancelAgendaEntryController ..> NotificationService
CancelAgendaEntryController ..> ApplicationSession : getCurrentSession

@enduml
