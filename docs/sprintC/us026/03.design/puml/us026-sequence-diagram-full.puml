
@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

'title System Sequence Diagram (SSD) - US026

autonumber

actor "GSM" as GSM
participant ":AssignVehiclesUI" as UI
participant ":AssignVehiclesController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "entryRepository\n:EntryRepository" as EntryRepo
participant "vehicleRepository\n:VehicleRepository" as VehicleRepository
participant ":AgendaEntryMapper" as AgendaEntryMapper
participant "agendaEntryDto\n:AgendaEntryDto" as AgendaEntryDto
participant "agendaEntry\n:AgendaEntry" as AgendaEntry
participant ":VehicleMapper" as VehicleMapper
participant "vehicleDto\n:VehicleDto" as VehicleDto
participant "vehicle\n:Vehicle" as Vehicle


activate GSM

    GSM -> UI : asks to assign vehicles to an entry in the Agenda
    activate UI

        UI -> CTRL** : create
        deactivate UI
                activate CTRL

                    CTRL -> RepositorySingleton : getInstance()
                    activate RepositorySingleton

                        RepositorySingleton --> CTRL : repositories
                    deactivate RepositorySingleton

                    CTRL -> PLAT : getEntryRepository()
                    activate PLAT

                        PLAT --> CTRL : entryRepository
                    deactivate PLAT

                     deactivate CTRL

                deactivate UI

        UI -> CTRL: getAgendaEntryList(GSM)
        activate CTRL

            CTRL -> EntryRepo: getAgendaEntryListByGSM(GSM)
            deactivate CTRL
            activate EntryRepo

            EntryRepo --> CTRL: agendaEntryList
            deactivate EntryRepo
            activate CTRL

                            CTRL -> AgendaEntryMapper : toDtoList(agendaEntryList)
                            deactivate CTRL
                            activate AgendaEntryMapper

                            loop
                                AgendaEntryMapper -> AgendaEntryDto** : create
                                activate AgendaEntryDto

                                AgendaEntryDto --> AgendaEntryMapper : agendaEntryDto
                                deactivate AgendaEntryDto
                            end

                            AgendaEntryMapper --> CTRL : agendaEntryDto
                            deactivate AgendaEntryMapper
                            activate CTRL

                        CTRL --> UI : agendaEntryDtoList
                        deactivate CTRL
                        deactivate UI

        UI -> CTRL : getVehiclesList()
        activate UI
        activate CTRL

                CTRL -> VehicleRepository : getVehiclesList()
                activate VehicleRepository

                VehicleRepository -> CTRL : vehiclesList
                deactivate VehicleRepository

                CTRL -> VehicleMapper: toDtoList
                deactivate CTRL
                activate VehicleMapper

                loop

                    VehicleMapper -> VehicleDto**: create
                    activate VehicleDto

                    VehicleDto --> VehicleMapper: vehicleDto
                    deactivate VehicleDto

                end loop

                VehicleMapper --> CTRL: vehiclesDtoList
                deactivate VehicleMapper
                activate CTRL

                CTRL -> UI : vehiclesDtoList
                deactivate CTRL

    UI --> GSM : shows the entries in the agenda and asks to select one
    deactivate UI

    GSM -> UI : select the entry
    activate UI

    loop

    UI --> GSM : shows vehicles and asks to select one or more
    deactivate UI

    GSM -> UI: selects vehicles
    activate UI

    end loop

    UI --> GSM : shows all data and requests confirmation
    deactivate UI

    GSM -> UI: confirms
    activate UI

        UI -> CTRL : assignVehiclesToEntry(agendaEntryDto, vehiclesDtoList)
                        deactivate UI
                        activate CTRL

                            CTRL -> AgendaEntryMapper: toDomain
                            deactivate CTRL
                            activate AgendaEntryMapper

                                AgendaEntryMapper -> AgendaEntry**: create
                                activate AgendaEntry

                                AgendaEntry --> AgendaEntryMapper: agendaEntry
                                deactivate AgendaEntry

                        AgendaEntryMapper --> CTRL: agendaEntry
                        deactivate AgendaEntryMapper
                        activate CTRL

                            CTRL -> VehicleMapper: toDomainList
                            deactivate CTRL
                            activate VehicleMapper

                                loop

                                VehicleMapper -> Vehicle**: create
                                activate Vehicle

                                Vehicle --> VehicleMapper: vehicle
                                deactivate Vehicle

                                end loop

                            VehicleMapper --> CTRL: vehiclesList
                            deactivate VehicleMapper
                            activate CTRL




                            CTRL -> EntryRepo : updateAgendaEntryVehicles(agendaEntry, VehiclesList)
                            deactivate CTRL
                            activate EntryRepo



                                EntryRepo -> EntryRepo : updateEntryVehicles(agendaEntry, Vehicles[])

                            EntryRepo --> CTRL : success
                            deactivate EntryRepo
                            activate CTRL

        CTRL --> UI : success
        deactivate CTRL
        activate UI

    UI --> GSM : displays success message (Vehicles assigned successfully)
    deactivate UI

deactivate GSM

@enduml
