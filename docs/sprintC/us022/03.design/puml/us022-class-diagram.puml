@startuml
skinparam shadowing false
skinparam line type polyline
'left to right direction
package UI {
    class AddAgendaEntryUI {
    }
}

package CONTROLLER {
    class AddAgendaEntryController {
        - repositories: Repositories
        - entryRepository: EntryRepository
        + AddAgendaEntryController()
        + getToDoEntryList(gsm: UserSession): List<ToDoEntryDto>
        - convertToAgendaEntry(agendaEntryDto: AgendaEntryDto): AgendaEntry
    }
}

package DOMAIN {
    package REPOSITORY {
        class Repositories {
            - instance: Repositories
            - entryRepository: EntryRepository
            - Repositories()
            + getInstance(): Repositories
            + getEntryRepository(): EntryRepository
        }

        class EntryRepository {
            - agendaEntryList: List<AgendaEntry>
            + EntryRepository()
            + getToDoEntryListByGSM(gsm: UserSession): List<ToDoEntryDto>
            + addAgendaEntry(agendaEntryDto: AgendaEntryDto, newDate: LocalDate, newUrgencyStatus: UrgencyStatus): boolean
        }
    }

    package DTO {
        class AgendaEntryMapper {
             + toDto(agendaEntry: AgendaEntry): AgendaEntryDto
             + toDto(toDoEntry: ToDoEntry): ToDoEntryDto
             + toDomain(agendaEntryDto: AgendaEntryDto): AgendaEntry
             + toDomain(toDoEntryDto: ToDoEntryDto): AgendaEntry
        }

        class AgendaEntryDto {
            - title: String
            - description: String
            - duration: int
            - urgencyStatus: UrgencyStatus
            - greenSpace: GreenSpaceDto
            - startingDate: LocalDate
            - progressStatus: ProgressStatus
            + AgendaEntryDto(title: String, description: String, duration: int, urgencyStatus: UrgencyStatus, greenSpace: GreenSpaceDto, startingDate: LocalDate, progressStatus: ProgressStatus)
            + getTitle(): String
            + getDescription(): String
            + getDuration(): int
            + getUrgencyStatus(): UrgencyStatus
            + getGreenSpace(): GreenSpaceDto
            + getStartingDate(): LocalDate
            + getProgressStatus(): ProgressStatus
        }

         class ToDoEntryDto {
            - title: String
            - description: String
            - duration: int
            - greenSpace: GreenSpaceDto
            + ToDoEntryDto(title: String, description: String, duration: int, greenSpace: GreenSpaceDto)
            + getTitle(): String
            + getDescription(): String
            + getDuration(): int
            + getGreenSpace(): GreenSpaceDto
         }
    }

    package MODEL {
        class AgendaEntry {
            - title: String
            - description: String
            - duration: int
            - urgencyStatus: UrgencyStatus
            - greenSpace: GreenSpace
            - startingDate: LocalDate
            - progressStatus: ProgressStatus
            + AgendaEntry(title: String, description: String, duration: int, urgencyStatus: UrgencyStatus, greenSpace: GreenSpace, startingDate: LocalDate, progressStatus: ProgressStatus)
            + setProgressStatus(status: ProgressStatus): void
            + setStartingDate(date: LocalDate): void
            + getUrgencyStatus(): UrgencyStatus
        }
    }
}

AddAgendaEntryUI ..> AddAgendaEntryController
AddAgendaEntryController ..> Repositories
Repositories --> Repositories: instance
AddAgendaEntryController ..> EntryRepository
Repositories --> EntryRepository
EntryRepository --> "*" AgendaEntry
AgendaEntryMapper ..> AgendaEntryDto
AgendaEntryMapper ..> AgendaEntry
AgendaEntryMapper ..> ToDoEntryDto



@enduml
