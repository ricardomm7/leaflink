@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as GSM
participant ":AddAgendaEntryUI" as UI
participant ":AddAgendaEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "entryRepository\n:EntryRepository" as EntryRepo
participant ":AgendaEntryMapper" as AgendaEntryMapper
participant "agendaEntry\n:AgendaEntry" as AgendaEntry
participant ":ToDoEntryMapper" as ToDoEntryMapper
participant "toDoEntryDto\n:ToDoEntryDto" as ToDoEntryDto

activate GSM

    GSM -> UI : requests to add a new entry in the Agenda
    activate UI

        UI -> CTRL **: create
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL : repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getEntryRepository()
            activate PLAT

            PLAT --> CTRL : entryRepository
            deactivate PLAT

        deactivate CTRL



        UI -> CTRL: getToDoEntryList(GSM)
        activate CTRL

            CTRL -> EntryRepo: getToDoEntryListByGSM(GSM)
            deactivate CTRL
            activate EntryRepo

            EntryRepo --> CTRL: toDoEntryList
            deactivate EntryRepo
            activate CTRL

            CTRL -> ToDoEntryMapper : toDtoList(toDoEntryList)
            activate ToDoEntryMapper

            loop

                ToDoEntryMapper -> ToDoEntryDto** : create
                activate ToDoEntryDto

                ToDoEntryDto --> ToDoEntryMapper : toDoEntryListDTO
                deactivate ToDoEntryDto
            end

            ToDoEntryMapper --> CTRL : toDoEntryDTO
            deactivate ToDoEntryMapper

            CTRL --> UI : toDoEntryDtoList
        deactivate CTRL

        UI -> GSM : shows the list of To-Do entries and requests to select one
    deactivate UI

    GSM -> UI : selects a To-Do entry
    activate UI

        UI --> GSM : requests starting date for the selected entry
    deactivate UI

    GSM -> UI : types starting date
    activate UI

         UI --> GSM : requests urgency status for the selected entry
    deactivate UI

    GSM -> UI : selects urgency status
    activate UI

    UI --> GSM : Shows all data and requests confirmation
    deactivate UI

    GSM -> UI: confirms data
    activate UI

        UI -> CTRL : addAgendaEntry(toDoEntryDto, startingDate, urgencyStatus)
        deactivate UI
        activate CTRL


            CTRL -> EntryRepo : addAgendaEntry(toDoEntryDto, startingDate, urgencyStatus)
            deactivate CTRL
            activate EntryRepo

            EntryRepo -> AgendaEntryMapper : toDomain(toDoEntryDto)
            activate AgendaEntryMapper

                AgendaEntryMapper -> AgendaEntry** : create
                activate AgendaEntry

                AgendaEntry --> AgendaEntryMapper : agendaEntry
                deactivate AgendaEntry

            AgendaEntryMapper --> EntryRepo : agendaEntry
            deactivate AgendaEntryMapper

                EntryRepo -> EntryRepo : setStartingDate(agendaEntry, startingDate)
                EntryRepo -> EntryRepo : updateEntryStatus(agendaEntry, urgencyStatus)

            EntryRepo --> CTRL : success
            deactivate EntryRepo
            activate CTRL

        CTRL --> UI : success
    deactivate CTRL
    activate UI

    UI --> GSM : displays a success message (entry added successfully)
deactivate UI

@enduml
