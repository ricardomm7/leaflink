@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as GSM
participant ":PostponeAgendaEntryUI" as UI
participant ":PostponeAgendaEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "entryRepository\n:EntryRepository" as EntryRepo
participant ":NotificationService" as NotificationService
participant ":EntryMapper" as EntryMapper
participant "entryDto\n:EntryDto" as EntryDto
participant "entry\n:Entry" as Entry



activate GSM

    GSM -> UI : asks to postpone an agenda entry
    activate UI

        UI -> CTRL **: create
        deactivate UI
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL : repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getTaskRepository()
            activate PLAT

                PLAT --> CTRL : entryRepository
            deactivate PLAT

             deactivate CTRL

        deactivate UI

        UI -> CTRL: getEntryList(GSM)
        activate UI
        activate CTRL

            CTRL -> EntryRepo: getEntryDtoListByGSM(GSM)
            deactivate CTRL
            activate EntryRepo

            loop

            EntryRepo -> EntryMapper : toDto(entry)
            activate EntryMapper

                EntryMapper -> EntryDto** : create
                activate EntryDto

                EntryDto --> EntryMapper : entryDTO
                deactivate EntryDto

            EntryMapper --> EntryRepo : entryDTO
            deactivate EntryMapper
            end

            EntryRepo --> CTRL : entryDTOList
            deactivate EntryRepo
            activate CTRL

            CTRL --> UI : entryDTOList
        deactivate CTRL

        UI -> GSM : shows the list of agenda entry and requests to select
    deactivate UI

    GSM -> UI : selects an agenda entry
    activate UI

        UI --> GSM : requests new date for the selected entry
    deactivate UI

    GSM -> UI : types new date
    activate UI

    UI --> GSM : Shows all data and requests confirmation
    deactivate UI

    GSM -> UI: confirms data
    activate UI

        UI -> CTRL : postPoneEntry(entryDTO, newDate)
        deactivate UI
        activate CTRL


            CTRL -> EntryRepo : updateEntry(entryDto, newDate, POSTPONED)
            deactivate CTRL
            activate EntryRepo

            EntryRepo -> EntryMapper : toDomain(entryDTO)
            activate EntryMapper


                EntryMapper -> Entry** : create
                activate Entry

                Entry --> EntryMapper : entry
                deactivate Entry


            EntryMapper --> EntryRepo : entry
            deactivate EntryMapper

                EntryRepo -> EntryRepo : validateNewDate(newDate)
                EntryRepo -> EntryRepo : updateEntryStatus(entry, POSTPONED)
                EntryRepo -> EntryRepo : setNewDate(entry, newDate)

            EntryRepo --> CTRL : success
            deactivate EntryRepo
            activate CTRL

            CTRL -> NotificationService : notifyTeam(entry, newDate)
            deactivate CTRL
            activate NotificationService

                NotificationService -> NotificationService : getTeamByEntry(entry)
                activate NotificationService

                NotificationService --> NotificationService : teamD
                deactivate NotificationService

                NotificationService -> NotificationService : getCollaboratorsList(team)
                activate NotificationService

                NotificationService --> NotificationService : collaboratorsList
                deactivate NotificationService

                NotificationService -> NotificationService : notifyTeam(collaboratorsList, entry, newDate)
                activate NotificationService

                NotificationService --> NotificationService : success
                deactivate NotificationService

                NotificationService --> CTRL : success
                deactivate NotificationService
        activate CTRL

        CTRL --> UI : success
    deactivate CTRL
    activate UI

    UI --> GSM : displays a success message (Entry postponed successfully)
deactivate UI

@enduml
