@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as GSM
participant ":PostponeAgendaEntryUI" as UI
participant ":PostponeAgendaEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "entryRepository\n:EntryRepository" as EntryRepo
participant "teamRepository\n:TeamRepository" as TeamRepo
participant ":NotificationService" as NotificationService
participant ":EntryMapper" as EntryMapper
participant ":CollaboratorMapper" as CollaboratorMapper


activate GSM

    GSM -> UI : asks to postpone an agenda entry
    activate UI

        UI -> CTRL **: create
        deactivate UI
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL : repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getTaskRepository()
            activate PLAT

                PLAT --> CTRL : entryRepository
            deactivate PLAT

            CTRL -> PLAT : getTeamRepository()
            activate PLAT

            PLAT --> CTRL : teamRepository
            deactivate PLAT
             deactivate CTRL

        deactivate UI

        UI -> CTRL: getEntryList(GSM)
        activate UI
        activate CTRL

            CTRL -> EntryRepo: getEntryDtoListByGSM(GSM)
            activate EntryRepo


            EntryRepo --> CTRL : entryDTOList
            deactivate EntryRepo

            CTRL --> UI : entryDTOList
        deactivate CTRL

        UI -> GSM : shows the list of agenda entry and requests to select
    deactivate UI

    GSM -> UI : selects an agenda entry
    activate UI

        UI --> GSM : requests new date for the selected entry
    deactivate UI

    GSM -> UI : types new date
    activate UI

    UI --> GSM : Shows all data and requests confirmation
    deactivate UI

    GSM -> UI: confirms data
    activate UI

        UI -> CTRL : postPoneEntry(entryDTO, newDate)
        deactivate UI
        activate CTRL


            CTRL -> EntryRepo : updateEntry(entryDto, newDate, POSTPONED)
            deactivate CTRL
            activate EntryRepo

            EntryRepo -> EntryMapper : toDomain(entryDTO)
            activate EntryMapper

            EntryMapper --> EntryRepo : entry
            deactivate EntryMapper

                EntryRepo -> EntryRepo : validateNewDate(newDate)
                EntryRepo -> EntryRepo : updateEntryStatus(entry, POSTPONED)
                EntryRepo -> EntryRepo : setNewDate(entry, newDate)

            EntryRepo -> TeamRepo : notifyTeam(entry, newDate)
            deactivate EntryRepo

                deactivate EntryRepo
                activate TeamRepo

                    TeamRepo -> TeamRepo : getTeamByEntry(entry)
                    activate TeamRepo

                    TeamRepo --> TeamRepo : teamDto
                    deactivate TeamRepo

                    TeamRepo -> TeamRepo : getCollaboratorsList(teamDto)
                    activate TeamRepo

                    TeamRepo --> TeamRepo : collaboratorsDtoList
                    deactivate TeamRepo

                    TeamRepo -> CollaboratorMapper : toDomainList(collaboratorsDtoList)
                    activate CollaboratorMapper

                    CollaboratorMapper --> TeamRepo : collaboratorsList
                    deactivate CollaboratorMapper

                    TeamRepo -> NotificationService : sendNotification(collaboratorsList, newDate)
                    deactivate TeamRepo
                    activate NotificationService

                        NotificationService --> TeamRepo : success
                    deactivate NotificationService
                    activate TeamRepo

                TeamRepo --> EntryRepo : success
                deactivate TeamRepo
                activate EntryRepo

        EntryRepo --> CTRL : success
        deactivate EntryRepo
        activate CTRL

        CTRL --> UI : success
    deactivate CTRL
    activate UI

    UI --> GSM : displays a success message (Entry postponed successfully)
deactivate UI

@enduml
