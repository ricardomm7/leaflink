@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title System Sequence Diagram (SSD) - US006

autonumber

actor "VFM" as VFM
participant ":RegisterVehicleUI" as UI
participant ":RegisterVehicleController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "vehicleRepository:\nVehicleRepository" as VehicleRepository
participant "vehicle\n:Vehicle" as VEI

activate VFM

    VFM -> UI : asks to register a new vehicle
    activate UI

        UI -> CTRL** : create

        UI --> VFM : requests vehicle data (VIN, Brand, Model, Type, Vehicle Plate, Tare Weight, \nGross Weight, Current Km, Acquisition Date, Maintenance Frequency)
        deactivate UI

    VFM -> UI : types requested data
    activate UI

    UI --> VFM : shows all data and requests confirmation
    deactivate UI

    VFM -> UI: confirms Data
    activate UI

        UI -> CTRL : submit vehicle data
        deactivate UI
        activate CTRL

            CTRL -> RepositorySingleton: getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> PLAT: getVehicleRepository
            activate PLAT

            PLAT --> CTRL: VehicleRepository
            deactivate PLAT

        CTRL -> VehicleRepository : verifyExistingVehicle(VIN, Vehicle Plate)
        deactivate CTRL

            activate VehicleRepository

        VehicleRepository -> VehicleRepository: verifyExistingVehicle(VIN, Vehicle Plate)
                                activate VehicleRepository

                                VehicleRepository --> VehicleRepository
                                deactivate VehicleRepository


            VehicleRepository -> VEI **: registerVehicle(VIN, Brand, Model, Type, Vehicle Plate, Tare Weight, \nGross Weight, Current Km, Acquisition Date, Maintenance Frequency)
        deactivate VehicleRepository
            activate VEI


            VEI -> VEI: validateVehicle(vehicle)
            activate VEI

            VEI --> VEI
            deactivate VEI

            VEI --> VehicleRepository: vehicle
            deactivate VEI
            activate VehicleRepository



                        VehicleRepository -> VehicleRepository: addVehicle(vehicle)


            VehicleRepository --> CTRL: vehicle
            deactivate VehicleRepository
            activate CTRL


            CTRL --> UI : success
            deactivate CTRL
            activate UI

    UI --> VFM : displays success message (Vehicle registered successfully)
    deactivate UI

deactivate VFM

@enduml
