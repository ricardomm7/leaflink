@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "HRM" as Employee
participant ":CreateSkillUI" as UI
participant ":CreateSkillController" as CTRL
participant ":Repositories" as GlobRepo
participant "repositories\n:Repositories" as PLAT
participant "skillRepository:\nJobRepository" as skillRepository
participant ":Skill" as Skill

activate Employee
Employee -> UI : wants to create a new skill
activate UI
UI -> CTRL** : create
UI --> Employee : asks for the info needed (designation)
Employee -> UI : provides skill title and description
UI --> Employee : shows a verification dialog
Employee -> UI : confirms skill creation


UI -> CTRL : createSkill(designation)
deactivate UI
activate CTRL
CTRL -> GlobRepo : getInstance()
activate GlobRepo
GlobRepo --> CTRL : repositories
deactivate GlobRepo

CTRL -> PLAT : getSkillRepository()
activate PLAT
PLAT -->  CTRL: skillRepository
deactivate PLAT

CTRL -> skillRepository : createSkill(designation)
deactivate CTRL
activate skillRepository

    skillRepository -> Skill** : create(designation)
    deactivate skillRepository

        activate Skill

    Skill -> Skill : verifyFilled(skill)
        activate Skill
        Skill -> Skill : verifySpecialCharacters(skill)
        activate Skill
        Skill --> Skill
        deactivate Skill
    Skill --> Skill
    deactivate Skill
    'Job -> Job : addJob(job)
    Skill --> skillRepository : skill
    activate skillRepository
    deactivate Skill
    skillRepository -> skillRepository : check for duplicates
    activate skillRepository
    skillRepository --> skillRepository
    deactivate skillRepository
    deactivate Skill
skillRepository --> CTRL : skill
deactivate skillRepository
activate CTRL
deactivate skillRepository

CTRL --> UI : success
deactivate CTRL
activate UI
UI --> Employee : displays operation success

deactivate UI
deactivate Employee

@enduml
